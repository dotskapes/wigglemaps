{
  "name": "mixpanel",
  "description": "A simple API for mixpanel",
  "keywords": [
    "mixpanel",
    "analytics",
    "api",
    "stats"
  ],
  "version": "0.0.10",
  "homepage": "https://github.com/carlsverre/mixpanel-node",
  "author": {
    "name": "Carl Sverre"
  },
  "main": "lib/mixpanel-node",
  "directories": {
    "lib": "lib"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/carlsverre/mixpanel-node.git"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "scripts": {
    "test": "bin/run_tests"
  },
  "devDependencies": {
    "nodeunit": "0.7",
    "sinon": "1.4"
  },
  "readme": "Mixpanel-node\n=============\n[![Build Status](https://secure.travis-ci.org/carlsverre/mixpanel-node.png)](http://travis-ci.org/carlsverre/mixpanel-node)\n\nThis library provides many of the features in the official javascript mixpanel library.  It is easy to use, and fully async.\n\nInstallation\n------------\n\n    npm install mixpanel\n\nQuick Start\n-----------\n\n    // grab the Mixpanel factory\n    var Mixpanel = require('mixpanel');\n\n    // create an instance of the mixpanel client\n    var mixpanel = Mixpanel.init('6fd9434dba686db2d1ab66b4462a3a67');\n\n    // track an event with optional properties\n    mixpanel.track(\"my event\", {\n        distinct_id: \"some unique client id\",\n        as: \"many\",\n        properties: \"as\",\n        you: \"want\"\n    });\n    mixpanel.track(\"played_game\");\n\n    // create or update a user in Mixpanel Engage\n    mixpanel.people.set(\"billybob\", {\n        $first_name: \"Billy\",\n        $last_name: \"Bob\",\n        plan: \"premium\",\n        games_played: 1,\n        points: 0\n    });\n\n    // set a single property on a user\n    mixpanel.people.set(\"billybob\", \"plan\", \"free\");\n\n    // increment a numeric property\n    mixpanel.people.increment(\"billybob\", \"games_played\");\n\n    // increment a numeric property by a different amount\n    mixpanel.people.increment(\"billybob\", \"points\", 15);\n\n    // increment multiple properties\n    mixpanel.people.increment(\"billybob\", {\"points\": 10, \"games_played\": 1});\n\n    // delete a user\n    mixpanel.people.delete_user(\"billybob\");\n\n    // all functions that send data to mixpanel take an optional\n    // callback as the last argument\n    mixpanel.track(\"test\", function(err) { if (err) throw err; });\n\n    // import an old event\n    var mixpanel_importer = Mixpanel.init('valid mixpanel token', {\n        key: \"valid api key for project\"\n    });\n\n    // needs to be in the system once for it to show up in the interface\n    mixpanel_importer.track('old event', { gender: '' });\n\n    mixpanel_importer.import(\"old event\", new Date(2012, 4, 20, 12, 34, 56), {\n        distinct_id: 'billybob',\n        gender: 'male'\n    });\n\nTests\n-----\n\n    # in the mixpanel directory\n    npm install\n    npm test\n\nAttribution/Credits\n-------------------\n\nHeavily inspired by the original js library copyright Mixpanel, Inc.\n(http://mixpanel.com/)\n\nCopyright (c) 2012 Carl Sverre\n\nContributions from:\n - [Andres Gottlieb](https://github.com/andresgottlieb)\n - [Ken Perkins](https://github.com/kenperkins)\n - [Nathan Rajlich](https://github.com/TooTallNate)\n - [Thomas Watson Steen](https://github.com/watson)\n\nLicense\n-------------------\n\nReleased under the MIT license.  See file called LICENSE for more\ndetails.\n",
  "readmeFilename": "readme.md",
  "_id": "mixpanel@0.0.10",
  "_from": "mixpanel@0.0.10"
}
