// Generated by CoffeeScript 1.6.2
var Filter, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Filter = (function(_super) {
  __extends(Filter, _super);

  function Filter() {
    this._transform = __bind(this._transform, this);    _ref = Filter.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Filter.prototype.config = {
    level: 6
  };

  Filter.prototype._transform = function(chunk, encoding, next) {
    var entry, message;

    entry = JSON.parse(chunk.toString());
    message = this.format(entry);
    if (message) {
      message = JSON.stringify(message);
    }
    return next(null, message);
  };

  Filter.prototype.format = function(entry) {
    if (entry.levelNumber > this.config.level) {
      return null;
    }
    return entry;
  };

  return Filter;

})(require('caterpillar').Transform);

module.exports = {
  Filter: Filter
};
