{
  "name": "caterpillar-human",
  "version": "2.1.0",
  "description": "Turn your Caterpillar logger stream into a beautiful readable format with colors and optional debug information",
  "homepage": "https://github.com/bevry/caterpillar-human",
  "keywords": [
    "caterpillar",
    "caterpillar-transform",
    "console",
    "log",
    "logger",
    "logging",
    "debug",
    "stream",
    "transform",
    "human",
    "readable"
  ],
  "author": {
    "name": "Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "bugs": {
    "url": "https://github.com/bevry/caterpillar-human/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/bevry/caterpillar-human.git"
  },
  "engines": {
    "node": ">=0.8"
  },
  "dependencies": {
    "ansicolors": "~0.2.1",
    "ansistyles": "~0.1.1"
  },
  "optionalDependencies": {
    "ansicolors": "~0.2.1",
    "ansistyles": "~0.1.1"
  },
  "peerDependencies": {
    "caterpillar": "2.x"
  },
  "devDependencies": {
    "readable-stream": "~1.0.2",
    "caterpillar": "2.x",
    "coffee-script": "~1.6.2",
    "joe": "~1.2.0",
    "joe-reporter-console": "~1.2.1",
    "chai": "~1.5.0"
  },
  "directories": {
    "lib": "./out/lib"
  },
  "scripts": {
    "test": "node ./out/test/caterpillar-human-test.js"
  },
  "main": "./out/lib/caterpillar-human.js",
  "readme": "# Human Transform for [Caterpillar](https://github.com/bevry/caterpillar)\n\n[![Build Status](https://secure.travis-ci.org/bevry/caterpillar-human.png?branch=master)](http://travis-ci.org/bevry/caterpillar-human)\n[![NPM version](https://badge.fury.io/js/caterpillar-human.png)](https://npmjs.org/package/caterpillar-human)\n[![Flattr this project](https://raw.github.com/balupton/flattr-buttons/master/badge-89x18.gif)](http://flattr.com/thing/344188/balupton-on-Flattr)\n\nTurn your [Caterpillar](https://github.com/bevry/caterpillar) logger stream into a beautiful readable format with colors and optional debug information\n\n\n\n## Install\n\n### Backend\n\n1. [Install Node.js](http://bevry.me/node/install)\n2. `npm install --save caterpillar-human`\n\n### Frontend\n\n1. [See Browserify](http://browserify.org/)\n\n\n\n## Usage\n\n### Example\n\n``` javascript\n// Import\nvar logger = new (require('caterpillar').Logger)();\nvar human = new (require('caterpillar-human').Human)();\n\n// Pipe logger output to our human interface, then our human interface output to stdout\nlogger.pipe(human).pipe(process.stdout);\n\n// Log\nlogger.log('warn',  'this is the first log entry');\n// warn:  this is the first log entry\nlogger.log('info', 'this is the second log entry');\n// info: this is the second log entry\n\n// Wait\nsetTimeout(function(){\n\t// Set debug mode\n\tlogger.setConfig({level:7});\n\n\t// Log\n\tlogger.log('warn',  'this is the first log entry');\n\t// warn: this is the first log entry\n\t//\t→ [2013-04-25 20:37:22.692] [/Users/balupton/Projects/caterpillar-human/example.js:20] [null._onTimeout]\n\tlogger.log('info', 'this is the second log entry');\n\t// info: this is the second log entry\n\t//\t→ [2013-04-25 20:37:22.693] [/Users/balupton/Projects/caterpillar-human/example.js:22] [null._onTimeout]\n},0);\n```\n\n### Human API, extends [caterpillar.Transform](https://github.com/bevry/caterpillar), which extends [stream.Transform](http://nodejs.org/api/stream.html#stream_class_stream_transform)\n\n``` javascript\nnew (require('caterpillar-human').Human)(config)\n```\n\n- Methods\n\t- `constructor(config?)` create our new human instance with the config, config is optional\n\t- `pipe(child)` pipe our stream to the child, also sync our config to it\n\t- `setConfig(config)` set the configuration and emit the `config` event\n\t- `getConfig()` get the configuration\n\t- `format(entry)` format the caterpillar logger entry\n- Configuration\n\t- `level` number, defaults to `null`, when set to `7` (debug level) we will debug information with the log entries\n\t- `color` boolean, defaults to `true`, set to `false` to turn off colors\n\t- `colors` objects of the level to color mapping, defaults to:\n\t\t\n\t\t``` javascript\n\t\t{\n\t\t\t0: 'red',\n\t\t\t1: 'red',\n\t\t\t2: 'red',\n\t\t\t3: 'red',\n\t\t\t4: 'yellow',\n\t\t\t5: 'yellow',\n\t\t\t6: 'green',\n\t\t\t7: 'green'\n\t\t}\n\t\t```\n\n- Events\n\t- `config(config)` emitted once our configuration has updated\n\n\n\n## History\nYou can discover the history inside the [History.md](https://github.com/bevry/caterpillar-human/blob/master/History.md#files) file\n\n\n\n## License\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright &copy; 2012+ [Bevry Pty Ltd](http://bevry.me)\n<br/>Copyright &copy; 2011 [Benjamin Lupton](http://balupton.com)\n",
  "readmeFilename": "README.md",
  "_id": "caterpillar-human@2.1.0",
  "_from": "caterpillar-human@~2.1.0"
}
