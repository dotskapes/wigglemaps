// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = function(testers) {
  var MyTester, expect, request, _ref;

  expect = require('chai').expect;
  request = require('request');
  return MyTester = (function(_super) {
    __extends(MyTester, _super);

    function MyTester() {
      _ref = MyTester.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    MyTester.prototype.testGenerate = testers.RendererTester.prototype.testGenerate;

    MyTester.prototype.testServer = function(next) {
      var fsUtil, tester;

      tester = this;
      fsUtil = require('fs');
      MyTester.__super__.testServer.apply(this, arguments);
      return this.suite('cleanurls', function(suite, test) {
        var baseUrl, fileUrl, outExpectedPath;

        baseUrl = "http://localhost:" + tester.docpad.config.port;
        outExpectedPath = tester.config.outExpectedPath;
        fileUrl = "" + baseUrl + "/welcome/";
        return test('server should serve URLs without an extension', function(done) {
          return request(fileUrl, function(err, response, actual) {
            var actualStr, expectedStr;

            if (err) {
              return done(err);
            }
            actualStr = actual.toString();
            expectedStr = 'Welcome';
            expect(actualStr).to.equal(expectedStr);
            return done();
          });
        });
      });
    };

    return MyTester;

  })(testers.ServerTester);
};
